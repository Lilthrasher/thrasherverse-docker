services:
  postgres:
    image: postgres
    container_name: kestra-postgres
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10

  kestra:
    image: kestra/kestra:latest
    container_name: kestra-dashboard
    restart: unless-stopped
    pull_policy: always
    user: "root"
    command: server standalone
    volumes:
      - /etc/timezone:/etc/timezone
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
      - kestra-data:/app/storage
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/${DB_NAME}
            driverClassName: org.postgresql.Driver
            username: ${DB_USER}
            password: ${DB_PASSWORD}
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "${ADMIN_EMAIL}" # it must be a valid email address
              password: ${ADMIN_PASSWORD}
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_started

volumes:
  postgres-data:
    external: true
  kestra-data:
    external: true